package com.dawes.modelo;
// Generated 25-ene-2018 10:02:38 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Parada generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "parada", catalog = "gamitour")
public class Parada implements java.io.Serializable {

	private Integer idparada;
	private Itinerario itinerario;
	private String nombre;
	private Integer numeroParada;
	private String ubicacion;
	private String historia;
	private String anecdotario;
	private String gastronomia;
	private String imagen;
	private Set<PruebaCultural> pruebaCulturals = new HashSet<PruebaCultural>(0);
	private Set<PruebaDeportiva> pruebaDeportivas = new HashSet<PruebaDeportiva>(0);

	public Parada() {
	}

	public Parada(Itinerario itinerario) {
		this.itinerario = itinerario;
	}

	public Parada(Itinerario itinerario, String nombre, Integer numeroParada, String ubicacion, String historia,
			String anecdotario, String gastronomia, String imagen, Set<PruebaCultural> pruebaCulturals,
			Set<PruebaDeportiva> pruebaDeportivas) {
		this.itinerario = itinerario;
		this.nombre = nombre;
		this.numeroParada = numeroParada;
		this.ubicacion = ubicacion;
		this.historia = historia;
		this.anecdotario = anecdotario;
		this.gastronomia = gastronomia;
		this.imagen = imagen;
		this.pruebaCulturals = pruebaCulturals;
		this.pruebaDeportivas = pruebaDeportivas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idparada", unique = true, nullable = false)
	public Integer getIdparada() {
		return this.idparada;
	}

	public void setIdparada(Integer idparada) {
		this.idparada = idparada;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "itinerario_iditinerario", nullable = false)
	public Itinerario getItinerario() {
		return this.itinerario;
	}

	public void setItinerario(Itinerario itinerario) {
		this.itinerario = itinerario;
	}

	@Column(name = "nombre", length = 60)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "numeroParada")
	public Integer getNumeroParada() {
		return this.numeroParada;
	}

	public void setNumeroParada(Integer numeroParada) {
		this.numeroParada = numeroParada;
	}

	@Column(name = "ubicacion", length = 45)
	public String getUbicacion() {
		return this.ubicacion;
	}

	public void setUbicacion(String ubicacion) {
		this.ubicacion = ubicacion;
	}

	@Column(name = "historia", length = 200)
	public String getHistoria() {
		return this.historia;
	}

	public void setHistoria(String historia) {
		this.historia = historia;
	}

	@Column(name = "anecdotario", length = 200)
	public String getAnecdotario() {
		return this.anecdotario;
	}

	public void setAnecdotario(String anecdotario) {
		this.anecdotario = anecdotario;
	}

	@Column(name = "gastronomia", length = 200)
	public String getGastronomia() {
		return this.gastronomia;
	}

	public void setGastronomia(String gastronomia) {
		this.gastronomia = gastronomia;
	}

	@Column(name = "imagen", length = 45)
	public String getImagen() {
		return this.imagen;
	}

	public void setImagen(String imagen) {
		this.imagen = imagen;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "parada")
	public Set<PruebaCultural> getPruebaCulturals() {
		return this.pruebaCulturals;
	}

	public void setPruebaCulturals(Set<PruebaCultural> pruebaCulturals) {
		this.pruebaCulturals = pruebaCulturals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "parada")
	public Set<PruebaDeportiva> getPruebaDeportivas() {
		return this.pruebaDeportivas;
	}

	public void setPruebaDeportivas(Set<PruebaDeportiva> pruebaDeportivas) {
		this.pruebaDeportivas = pruebaDeportivas;
	}

	@Override
	public String toString() {
		return "Parada [idparada=" + idparada + ", itinerario=" + itinerario + ", nombre=" + nombre + ", numeroParada="
				+ numeroParada + ", ubicacion=" + ubicacion + ", historia=" + historia + ", anecdotario=" + anecdotario
				+ ", gastronomia=" + gastronomia + ", imagen=" + imagen + ", pruebaCulturals=" + pruebaCulturals
				+ ", pruebaDeportivas=" + pruebaDeportivas + "]";
	}
	
}
